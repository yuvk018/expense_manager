{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj\\\\Desktop\\\\expense management\\\\frontend\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { useGlobalContext } from \"../../context/globalContext\";\nimport { dateFormat } from \"../../utils/dateFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n  const data = {\n    labels: incomes.map(inc => {\n      const {\n        date\n      } = inc;\n      return dateFormat(date);\n    }),\n    datasets: [{\n      label: \"Income\",\n      data: [...incomes.map(income => {\n        const {\n          amount\n        } = income;\n        return amount;\n      })],\n      backgroundColor: \"green\",\n      // Light green background fill\n      borderColor: \"white\",\n      // Line color\n      tension: 0.2,\n      borderWidth: 1 // Line thickness\n    }, {\n      label: \"Expenses\",\n      data: [...expenses.map(expense => {\n        const {\n          amount\n        } = expense;\n        return amount;\n      })],\n      backgroundColor: \"red\",\n      // Light red background fill\n      borderColor: \"white\",\n      // Line color\n      tension: 0.2,\n      borderWidth: 1 // Line thickness\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        labels: {\n          color: \"rgba(255, 255, 255, 0.7)\" // Light color for legend text\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: \"rgba(255, 255, 255, 0.7)\" // Light color for x-axis labels\n        },\n        grid: {\n          color: \"rgba(255, 255, 255, 0.1)\" // Light color for x-axis grid lines\n        }\n      },\n      y: {\n        ticks: {\n          color: \"rgba(255, 255, 255, 0.7)\" // Light color for y-axis labels\n        },\n        grid: {\n          color: \"rgba(255, 255, 255, 0.1)\" // Light color for y-axis grid lines\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#212c3b] border-white border-[1px] rounded-xl mb-10 p-5\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","useGlobalContext","dateFormat","jsxDEV","_jsxDEV","register","_s","incomes","expenses","data","labels","map","inc","date","datasets","label","income","amount","backgroundColor","borderColor","tension","borderWidth","expense","options","plugins","legend","color","scales","x","ticks","grid","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yuvraj/Desktop/expense management/frontend/src/components/Chart/Chart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Chart as ChartJs,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n} from \"chart.js\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useGlobalContext } from \"../../context/globalContext\";\r\nimport { dateFormat } from \"../../utils/dateFormat\";\r\n\r\nChartJs.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n);\r\n\r\nfunction Chart() {\r\n  const { incomes, expenses } = useGlobalContext();\r\n\r\n  const data = {\r\n    labels: incomes.map((inc) => {\r\n      const { date } = inc;\r\n      return dateFormat(date);\r\n    }),\r\n    datasets: [\r\n      {\r\n        label: \"Income\",\r\n        data: [\r\n          ...incomes.map((income) => {\r\n            const { amount } = income;\r\n            return amount;\r\n          }),\r\n        ],\r\n        backgroundColor: \"green\", // Light green background fill\r\n        borderColor: \"white\", // Line color\r\n        tension: 0.2,\r\n        borderWidth: 1, // Line thickness\r\n      },\r\n      {\r\n        label: \"Expenses\",\r\n        data: [\r\n          ...expenses.map((expense) => {\r\n            const { amount } = expense;\r\n            return amount;\r\n          }),\r\n        ],\r\n        backgroundColor: \"red\", // Light red background fill\r\n        borderColor: \"white\", // Line color\r\n        tension: 0.2,\r\n        borderWidth: 1, // Line thickness\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: \"rgba(255, 255, 255, 0.7)\", // Light color for legend text\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          color: \"rgba(255, 255, 255, 0.7)\", // Light color for x-axis labels\r\n        },\r\n        grid: {\r\n          color: \"rgba(255, 255, 255, 0.1)\", // Light color for x-axis grid lines\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          color: \"rgba(255, 255, 255, 0.7)\", // Light color for y-axis labels\r\n        },\r\n        grid: {\r\n          color: \"rgba(255, 255, 255, 0.1)\", // Light color for y-axis grid lines\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#212c3b] border-white border-[1px] rounded-xl mb-10 p-5\">\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,QACL,UAAU;AAEjB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpDb,OAAO,CAACc,QAAQ,CACdb,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UACF,CAAC;AAED,SAAST,KAAKA,CAAA,EAAG;EAAAgB,EAAA;EACf,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAEhD,MAAMQ,IAAI,GAAG;IACXC,MAAM,EAAEH,OAAO,CAACI,GAAG,CAAEC,GAAG,IAAK;MAC3B,MAAM;QAAEC;MAAK,CAAC,GAAGD,GAAG;MACpB,OAAOV,UAAU,CAACW,IAAI,CAAC;IACzB,CAAC,CAAC;IACFC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,QAAQ;MACfN,IAAI,EAAE,CACJ,GAAGF,OAAO,CAACI,GAAG,CAAEK,MAAM,IAAK;QACzB,MAAM;UAAEC;QAAO,CAAC,GAAGD,MAAM;QACzB,OAAOC,MAAM;MACf,CAAC,CAAC,CACH;MACDC,eAAe,EAAE,OAAO;MAAE;MAC1BC,WAAW,EAAE,OAAO;MAAE;MACtBC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE,CAAC,CAAE;IAClB,CAAC,EACD;MACEN,KAAK,EAAE,UAAU;MACjBN,IAAI,EAAE,CACJ,GAAGD,QAAQ,CAACG,GAAG,CAAEW,OAAO,IAAK;QAC3B,MAAM;UAAEL;QAAO,CAAC,GAAGK,OAAO;QAC1B,OAAOL,MAAM;MACf,CAAC,CAAC,CACH;MACDC,eAAe,EAAE,KAAK;MAAE;MACxBC,WAAW,EAAE,OAAO;MAAE;MACtBC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE,CAAC,CAAE;IAClB,CAAC;EAEL,CAAC;EAED,MAAME,OAAO,GAAG;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNf,MAAM,EAAE;UACNgB,KAAK,EAAE,0BAA0B,CAAE;QACrC;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,KAAK,EAAE;UACLH,KAAK,EAAE,0BAA0B,CAAE;QACrC,CAAC;QACDI,IAAI,EAAE;UACJJ,KAAK,EAAE,0BAA0B,CAAE;QACrC;MACF,CAAC;MACDK,CAAC,EAAE;QACDF,KAAK,EAAE;UACLH,KAAK,EAAE,0BAA0B,CAAE;QACrC,CAAC;QACDI,IAAI,EAAE;UACJJ,KAAK,EAAE,0BAA0B,CAAE;QACrC;MACF;IACF;EACF,CAAC;EAED,oBACEtB,OAAA;IAAK4B,SAAS,EAAC,6DAA6D;IAAAC,QAAA,eAC1E7B,OAAA,CAACJ,IAAI;MAACS,IAAI,EAAEA,IAAK;MAACc,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAAC/B,EAAA,CAvEQhB,KAAK;EAAA,QACkBW,gBAAgB;AAAA;AAAAqC,EAAA,GADvChD,KAAK;AAyEd,eAAeA,KAAK;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}