{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj\\\\Desktop\\\\expense management\\\\frontend\\\\src\\\\components\\\\Transactions\\\\Transactions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGlobalContext } from \"../../context/globalContext\";\nimport IncomeItem from \"../IncomeItem/IncomeItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transactions() {\n  _s();\n  const {\n    incomes,\n    expenses,\n    getIncomes,\n    getExpenses,\n    deleteIncome,\n    deleteExpense,\n    updateIncome,\n    update\n  } = useGlobalContext();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    getIncomes();\n    getExpenses();\n  }, []);\n  useEffect(() => {\n    const combinedTransactions = [...incomes, ...expenses].sort((a, b) => new Date(b.date) - new Date(a.date));\n    setTransactions(combinedTransactions);\n  }, [incomes, expenses]);\n  const handleDelete = (id, type) => {\n    if (type === \"income\") {\n      deleteIncome(id);\n    } else if (type === \"expense\") {\n      deleteExpense(id);\n    }\n    setTransactions(prevTransactions => prevTransactions.filter(transaction => transaction._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6 border-2 border-white overflow-auto h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl text-center mb-8 font-bold text-[#C0BCB5]\",\n      children: \"All Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), transactions.length > 0 ? transactions.map(transaction => {\n      const {\n        _id,\n        title,\n        amount,\n        date,\n        category,\n        description,\n        type\n      } = transaction;\n      return /*#__PURE__*/_jsxDEV(IncomeItem, {\n        id: _id,\n        title: title,\n        description: description,\n        amount: amount,\n        date: date,\n        type: type,\n        category: category,\n        titleColor: type === \"expense\" ? \"text-red-500\" : \"text-green-500\",\n        indicatorColor: type === \"expense\" ? \"text-red-500\" : \"text-green-500\",\n        deleteItem: () => handleDelete(_id, type)\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-white\",\n      children: \"No transactions found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Transactions, \"zLkGtpjJMfzINzutw5gM2LpY26M=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useEffect","useState","useGlobalContext","IncomeItem","jsxDEV","_jsxDEV","Transactions","_s","incomes","expenses","getIncomes","getExpenses","deleteIncome","deleteExpense","updateIncome","update","transactions","setTransactions","combinedTransactions","sort","a","b","Date","date","handleDelete","id","type","prevTransactions","filter","transaction","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","category","description","titleColor","indicatorColor","deleteItem","_c","$RefreshReg$"],"sources":["C:/Users/Yuvraj/Desktop/expense management/frontend/src/components/Transactions/Transactions.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGlobalContext } from \"../../context/globalContext\";\r\nimport IncomeItem from \"../IncomeItem/IncomeItem\";\r\n\r\nfunction Transactions() {\r\n  const {\r\n    incomes,\r\n    expenses,\r\n    getIncomes,\r\n    getExpenses,\r\n    deleteIncome,\r\n    deleteExpense,\r\n    updateIncome,\r\n    update\r\n  } = useGlobalContext();\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    \r\n    getIncomes();\r\n    getExpenses();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    \r\n    const combinedTransactions = [...incomes, ...expenses].sort(\r\n      (a, b) => new Date(b.date) - new Date(a.date)\r\n    );\r\n    setTransactions(combinedTransactions);\r\n  }, [incomes, expenses]);\r\n\r\n  const handleDelete = (id, type) => {\r\n    if (type === \"income\") {\r\n      deleteIncome(id);\r\n    } else if (type === \"expense\") {\r\n      deleteExpense(id);\r\n    }\r\n\r\n    \r\n    setTransactions((prevTransactions) =>\r\n      prevTransactions.filter((transaction) => transaction._id !== id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 border-2 border-white overflow-auto h-full\">\r\n      <h1 className=\"text-3xl text-center mb-8 font-bold text-[#C0BCB5]\">\r\n        All Transactions\r\n      </h1>\r\n      {transactions.length > 0 ? (\r\n        transactions.map((transaction) => {\r\n          const { _id, title, amount, date, category, description, type } =\r\n            transaction;\r\n          return (\r\n            <IncomeItem\r\n              key={_id}\r\n              id={_id}\r\n              title={title}\r\n              description={description}\r\n              amount={amount}\r\n              date={date}\r\n              type={type}\r\n              category={category}\r\n              titleColor={\r\n                type === \"expense\" ? \"text-red-500\" : \"text-green-500\"\r\n              }\r\n              indicatorColor={\r\n                type === \"expense\" ? \"text-red-500\" : \"text-green-500\"\r\n              }\r\n              deleteItem={() => handleDelete(_id, type)} \r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <p className=\"text-center text-white\">No transactions found</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transactions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}